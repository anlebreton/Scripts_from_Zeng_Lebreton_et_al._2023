dunn_test.res$group <- grp
dunn_test.res$comp <- paste(dunn_test.res$group1, dunn_test.res$group2, sep="_")
dunn_test.res$signif <- paste(dunn_test.res$comp,".signif", sep="")
dunn_test.res$comp <- paste(dunn_test.res$comp,".padjust", sep="")
dunn_test.res2 <- dunn_test.res %>% select(group,comp,  p.adj ) %>%
pivot_wider(names_from = comp, values_from = p.adj)
dunn_test.res3 <- dunn_test.res %>% select(group,signif,  p.adj.signif ) %>%
pivot_wider(names_from = signif, values_from = p.adj.signif)
dunn_test.res <- left_join(dunn_test.res2, dunn_test.res3)
t.res.tmp <-  bind_rows(t.res.tmp,dunn_test.res )
}
t.res.update <- left_join(test_Kruskall_Anova.res, t.res.tmp)
return(t.res.update)
}
#t.res.update <- test_Dunn_postKruskall(filtered_Fungi_ratio,WhereToTest, test_Kruskall_Anova.res )
#TPM_prc_byGroup <-  collect_TPM_prc_byGroup(Fungi_ratio, GroupToTest, WhereToTest, byCond="tree_species", condValues=c("Quercus","Abies","Picea"))
#t.res.update2 <- left_join(t.res.update, TPM_prc_byGroup)
Split_Annot_In_Multiple_Rows <- function(Fungi_TPM, WhereToTest){
Fungi_TPM_filtered <- Fungi_TPM %>% #dplyr::select(-starts_with("NR_"),-starts_with("Myc"),-ID,-ctg_length, -sum_contig_count) %>%
#dplyr::select("uniqueID",all_of(WhereToTest), starts_with("PD"),starts_with("LifeStyle"), starts_with("O") ) %>%
#filter(!is.na(get(WhereToTest))) %>%  filter(get(WhereToTest) != "NoHit" ) %>%
#filter(KOG_group %in% c("CELLULAR PROCESSES AND SIGNALING", "INFORMATION STORAGE AND PROCESSING", "METABOLISM")) %>%
#mutate(KOG_group=case_when(KOG_group != "Unknown" ~ KOG_group, TRUE ~ "UNDEFINED"  )) %>%
separate_rows(WhereToTest,sep = "', '") %>%
mutate(!!WhereToTest:=sub("^'", "", get(WhereToTest))) %>%
mutate(!!WhereToTest:=sub("'$", "", get(WhereToTest))) %>%
mutate(!!WhereToTest:=trimws(get(WhereToTest),which = c("both"),whitespace = "[ \t\r\n']" ))
Fungi_TPM_filtered_Annot <- unique(Fungi_TPM_filtered)
return(Fungi_TPM_filtered_Annot)
}
get_dfstatTPM<- function(Fungi_ratio, WhereToTest){
dfstatTPM <- Fungi_ratio %>%
group_by(get(WhereToTest)) %>% summarise(max=max(tpm_counts), min=(min(tpm_counts)), mean=mean(tpm_counts), median=median(tpm_counts))
colnames(dfstatTPM)[colnames(dfstatTPM) == "get(WhereToTest)"] <- WhereToTest
return(dfstatTPM )
}
get_dfstatPERC<- function(Fungi_ratio, WhereToTest){
dfstatPERC <- Fungi_ratio %>%  group_by(get(WhereToTest), samples) %>% summarise(tpm=sum(tpm_counts)) %>% ungroup() %>%
group_by(samples) %>% mutate(somme=sum(tpm)) %>% ungroup() %>%
mutate(perc=(tpm/somme)*100 )
colnames(dfstatPERC)[colnames(dfstatPERC) == "get(WhereToTest)"] <- WhereToTest
dfstatPERC <-dfstatPERC %>% group_by(get(WhereToTest)) %>%
summarise(max= round(max(perc),digits =1), min=round(min(perc),digits =1), mean=round(mean(perc),digits =1), median=round(median(perc),digits =1))
colnames(dfstatPERC)[colnames(dfstatPERC) == "get(WhereToTest)"] <- WhereToTest
return(dfstatPERC)
}
get_dfstatTPM_LifeStyle<- function(Fungi_ratio, WhereToTest){
dfstatTPM <- Fungi_ratio %>%
group_by(get(WhereToTest), LifeStyle) %>%
summarise(max=max(tpm_counts), min=(min(tpm_counts)), mean=mean(tpm_counts), median=median(tpm_counts), .groups = "keep")
colnames(dfstatTPM)[colnames(dfstatTPM) == "get(WhereToTest)"] <- WhereToTest
return(dfstatTPM)
}
get_dfstatPERC_LifeStyle <- function(Fungi_ratio, WhereToTest){
dfstatPERC <- Fungi_ratio %>%  group_by(get(WhereToTest),LifeStyle, samples) %>% summarise(tpm=sum(tpm_counts)) %>% ungroup() %>%
group_by(samples) %>% mutate(somme=sum(tpm)) %>% ungroup() %>%
mutate(perc=(tpm/somme)*100 )
colnames(dfstatPERC)[colnames(dfstatPERC) == "get(WhereToTest)"] <- WhereToTest
dfstatPERC <-dfstatPERC %>% group_by(get(WhereToTest),LifeStyle) %>%
summarise(max= round(max(perc),digits =1), min=round(min(perc),digits =1), mean=round(mean(perc),digits =1), median=round(median(perc),digits =1))
colnames(dfstatPERC)[colnames(dfstatPERC) == "get(WhereToTest)"] <- WhereToTest
return(dfstatPERC)
}
library("readr")
library("plyr");library("dplyr");library("ggplot2");library("tidyr");library("tidyverse")
library("RColorBrewer");library("ggpubr");library("vegan")
treatment_metadata <- as.data.frame(read_delim("../0_metadata/metadata_all.txt", "\t", escape_double = FALSE, trim_ws = TRUE))
treatment_metadata$layer_tree <- paste( treatment_metadata$layer,treatment_metadata$tree_species, sep="_")
treatment_metadata$Layer <- treatment_metadata$layer
treatment_metadata <- treatment_metadata %>% mutate(layer=case_when(layer != "OS" ~ layer, TRUE ~ "OS: 0 - 5cm"))
treatment_metadata <- treatment_metadata %>% mutate(layer=case_when(layer != "OM" ~ layer, TRUE ~ "OM: 5 - 25cm"))
treatment_metadata$layer <- factor(treatment_metadata$layer, levels=c("OS: 0 - 5cm","OM: 5 - 25cm" ))
Fungi_TPM <- read_delim("../1_data/ALL_SITES_Fungi_TPM.txt", "\t", escape_double = FALSE, col_names = TRUE, trim_ws = TRUE) %>%
filter(tax_kingdom %in% "Fungi", PD_Name %notin% c("Batde5","Crypa2","Pospl1")) %>%
select(cols=-c("MEROPS_coverage", "MEROPS_evalue","MEROPS_score" ))
Fungi_TPM <-  Fungi_TPM %>% mutate(species= paste(PD_Genus,"aff.",PD_Species,sep=" "))
Fungi_TPM<-  Fungi_TPM %>% mutate(species= case_when(species!="Amanita aff. cecilae" ~ species, TRUE ~  "Amanita aff. griseofolia")) %>%
mutate(species= case_when(species!="Tuber aff. borchii" ~ species, TRUE ~  "ATuber zhongdianense")) %>%
mutate(species= case_when(species!="Russula aff. senecis" ~ species, TRUE ~  "Russula punctipes"))
Fungi_TPM <- Fungi_TPM %>%  mutate(LifeStyle = case_when(LifeStyle %notin% c("dung_saprotroph") ~ LifeStyle, TRUE ~ "soil_saprotroph")) %>%
mutate(LifeStyle = case_when(LifeStyle %notin% c("nectar/tap_saprotroph","unspecified_saprotroph","pollen_saprotroph") ~
LifeStyle, TRUE ~ "other_saprotroph")) %>%
mutate(LifeStyle = case_when(!is.na(LifeStyle) ~ LifeStyle, TRUE ~ "unassigned")) %>%
mutate(LifeStyle = case_when(LifeStyle %in% c("plant_pathogen",
"wood_saprotroph", "litter_saprotroph","soil_saprotroph","other_saprotroph",
"ectomycorrhizal", "arbuscular_mycorrhizal",
"unassigned") ~ LifeStyle, TRUE ~ "others"))
Fungi_ratio <- Fungi_TPM %>%
dplyr::select(-starts_with("NR_"),-starts_with("Myc"),-ID,-ctg_length, -sum_contig_count) %>%
group_by(PD_Species, PD_Genus, PD_Family, PD_Order, PD_Class, PD_Phylum,LifeStyle) %>% summarise_if(is.numeric, sum) %>%
pivot_longer(cols=-c(PD_Species, PD_Genus, PD_Family, PD_Order, PD_Class, PD_Phylum,LifeStyle), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata) %>%
group_by(PD_Species, PD_Genus, PD_Family, PD_Order, PD_Class, PD_Phylum,LifeStyle, layer_tree) %>% summarise(tpm_sum=sum(tpm_counts)) %>%
pivot_wider(names_from = layer_tree, values_from = tpm_sum, values_fill = 0)
Fungi_ratio <- Fungi_TPM %>%
dplyr::select(-starts_with("NR_"),-starts_with("Myc"),-ID,-ctg_length, -sum_contig_count) %>%
filter(PD_Species %in% c("borchii","undulatus","glaucopus","triplex",
"muscaria","haematopus","badius","pura","granulatus","saniosus", "sp",
"camargensis"), PD_Genus %in% c("Tuber","Basidioascus","Phlegmacium",
"Geastrum","Amanita","Mycena","Xerocomus",
"Umbelopsis","Elaphomyces","Cortinarius",
"Linnemannia")) %>%
group_by(contig,PD_Species, PD_Genus) %>% summarise_if(is.numeric, sum) %>%
pivot_longer(cols=-c(contig,PD_Species, PD_Genus), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata) %>%
group_by(PD_Species, PD_Genus,contig, layer_tree) %>% summarise(tpm_sum=sum(tpm_counts))
Fungi_ratio <- Fungi_TPM %>%
dplyr::select(-starts_with("NR_"),-starts_with("Myc"),-ID,-ctg_length, -sum_contig_count) %>%
filter(contig %in% c("k141_503747","k141_3748920","k141_2562615","k141_3073207","k141_3703555",
"k141_1319161","k141_326632","k141_7646129", "k141_56981", "k141_7162408",
"k141_5541758","k141_8777435"))
#write.table(Fungi_ratio,file="../taxonomy_lisadd.tsv", sep="\t", row.names = F)
Fungi_ratio <- Fungi_TPM %>%
dplyr::select(-starts_with("NR_"),-starts_with("Myc"),-ID,-ctg_length, -sum_contig_count) %>%
group_by(LifeStyle) %>% summarise_if(is.numeric, sum) %>% pivot_longer(cols=-c(LifeStyle), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata)  %>%
filter(!grepl("score", samples))%>%
filter(!grepl("evalue", samples))%>%
filter(!grepl("coverage", samples))
tmp <- Fungi_ratio %>% ungroup %>% group_by(samples) %>% mutate(tmp_perc=(tpm_counts/sum(tpm_counts))*100) %>% ungroup %>%
group_by(LifeStyle, samples) %>% summarise(tpm_group=sum(tmp_perc)) %>% group_by(LifeStyle) %>%
summarise(max=max(tpm_group), mean=mean(tpm_group), min=min(tpm_group))
top10Eco <- Fungi_TPM %>%
dplyr::select(-starts_with("NR_"),-starts_with("Myc"),-ID,-ctg_length, -sum_contig_count) %>%
group_by(LifeStyle) %>% summarise_if(is.numeric, sum) %>% pivot_longer(cols=-c(LifeStyle), names_to="samples", values_to="tpm_counts")%>%
group_by(LifeStyle) %>% summarise(max=max(tpm_counts), mean=mean(tpm_counts), median=median(tpm_counts)) %>%
slice_max(.,order_by = mean,n=10)
Fungi_TPM_MEROPS <- Fungi_TPM %>%
dplyr::select(-starts_with("NR_"),-starts_with("Myc"),-ID,-ctg_length, -sum_contig_count ) %>%
filter(MEROPS_Hit != "*")
Fungi_TPM_MEROPS$MEROPS_ID <- sapply(strsplit(Fungi_TPM_MEROPS$MEROPS_description, "#"), "[",2)
Fungi_ratio <- Fungi_TPM_MEROPS %>%
#filter(grepl('ectomycorrhizal',LifeStyle) ) %>%
filter(grepl('saprotroph',LifeStyle) ) %>%
#mutate(CAZy_family = case_when(CAZy_family %in% topCAZymes ~ CAZy_family, TRUE ~ "Others")) %>%
#mutate(CAZy_family = case_when(CAZy_family %in% top10CAZymes$CAZy_family ~ CAZy_family, TRUE ~ "Others")) %>%
group_by(MEROPS_ID) %>% summarise_if(is.numeric, sum) %>%
pivot_longer(cols=-c(MEROPS_ID), names_to="samples", values_to="tpm") %>%
left_join(treatment_metadata) %>% group_by(MEROPS_ID, layer_tree) %>% summarise(tpm_median=median(tpm), .groups = "keep") %>%
pivot_wider(names_from  = layer_tree, values_from = "tpm_median")
sp_tmp <- Fungi_ratio %>% pivot_longer(cols=-c(MEROPS_ID), names_to="layer_tree", values_to="tpm_counts") %>%
group_by(layer_tree) %>% mutate(sumLayerTree=sum(tpm_counts)) %>% ungroup() %>%
mutate(observation_perc=(tpm_counts/sumLayerTree)*100  ) %>%
#arrange(desc(observation_perc)) %>%
group_by(layer_tree) %>%
dplyr::arrange(layer_tree, observation_perc) %>%
dplyr::mutate(cumul_observation_perc=cumsum(observation_perc)) %>%
dplyr::arrange(layer_tree, desc(observation_perc)) %>%
dplyr::mutate(cumul_observation_perc_desc=cumsum(observation_perc)) %>%
filter(cumul_observation_perc >= 50)
sp_preval <- Fungi_ratio %>% pivot_longer(cols=-c(MEROPS_ID), names_to="layer_tree", values_to="tpm_counts") %>%
mutate(nb=0)%>%
mutate(nb=case_when(tpm_counts < 1 ~  nb, TRUE ~ 1)) %>%
group_by(MEROPS_ID) %>% summarise(preval=sum(nb)) %>%
filter(preval < 4)
Fungi_ratio <- Fungi_ratio %>% filter(MEROPS_ID %in% sp_tmp$MEROPS_ID ) %>%
filter(MEROPS_ID %notin% sp_preval$MEROPS_ID )
rownames(Fungi_ratio) <- Fungi_ratio$MEROPS_ID
m <- Fungi_ratio %>% ungroup() %>% select(-MEROPS_ID)
rownames(m) <- Fungi_ratio$MEROPS_ID
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
mat_breaks <- quantile_breaks(as.matrix(log(m+1)), n = 11)
library(pheatmap)
annotSample <- treatment_metadata %>% select(layer_tree, layer, tree_species) %>% unique()
tmp <- annotSample
annotSample$layer_tree <- NULL
rownames(annotSample) <- tmp$layer_tree
myColorAnnot=list("tree_species"=GetMyColor(annotSample$tree_species),
"layer"=GetMyColor(annotSample$layer)#,
#"Type"=GetMyColorCAZymes(annotCAZymes$Type),
#"Substrate"=GetMyColorCAZymes(annotCAZymes$Substrate)
)
pheatmap(log(m+1),
#color=myColor,#cutree_rows = 6,
color= c("white",(colorRampPalette(brewer.pal(9, "OrRd"))(100)),"black"),
#color=c("white",brewer.pal(length(mat_breaks)-3, "OrRd"), "black"),
#breaks = mat_breaks,
annotation_col = annotSample,
#border_color      = "grey80",
#border_size=.01,
#annotation_row = annotCAZymes,
annotation_colors = myColorAnnot,
cellwidth=16,
cellheight = 4,
fontsize_row = 4,
fontsize_col = 8,
main="MEROPS in Saprotrophs sp."
)
Fungi_ratio <- Fungi_TPM_MEROPS %>%
group_by(MEROPS_ID) %>% summarise_if(is.numeric, sum) %>% pivot_longer(cols=-c(MEROPS_ID), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata) %>%
group_by(MEROPS_ID, layer_tree) %>% summarise(tpm_median=median(tpm_counts), .groups = "keep") #%>%
topNb <- 10
t <- Fungi_ratio %>%
group_by(MEROPS_ID) %>% summarise(max=max(tpm_median), mean=mean(tpm_median), median=median(tpm_median)) #%>%
t1 <- t %>% slice_max(.,order_by = max,n=topNb)
t2 <-t  %>% slice_max(.,order_by = median,n=topNb)
t3 <- t %>% slice_max(.,order_by = mean,n=topNb)
#if(t2 > topNb){t2 <- NULL}
topTax <- unique(c(t1$MEROPS_ID,t2$MEROPS_ID,t3$MEROPS_ID))
nbOtherSpecies <- length(t$MEROPS_ID) - length(topTax)
OtherTag <- paste("Others (n=", nbOtherSpecies,')',sep="")
Fungi_ratio <- Fungi_TPM_MEROPS %>%
mutate(MEROPS_ID = case_when(MEROPS_ID %in% topTax ~ MEROPS_ID, TRUE ~ OtherTag)) %>%
group_by(MEROPS_ID) %>% summarise_if(is.numeric, sum) %>% pivot_longer(cols=-c(MEROPS_ID), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata) %>%
group_by(MEROPS_ID, layer_tree,layer,tree_species) %>% summarise(tpm_median=median(tpm_counts), .groups = "keep")
#mycolorsCAZy <- GetMyColorCAZymes(Fungi_ratio$CAZy_family)
Fungi_ratio$MEROPS_ID <- factor(Fungi_ratio$MEROPS_ID, levels = c(topTax,OtherTag) )
ggplot(data=Fungi_ratio, aes(x=layer_tree, y=tpm_median, fill=MEROPS_ID)) +
geom_col() + facet_wrap(.~ layer, scales = "free_x") +
#labs(title=nom2) +
#scale_fill_manual(values=mycolorsCAZy) +
scale_fill_manual(values=c(brewer.pal(8, "Paired"), brewer.pal(6, "BrBG"), "grey")) +
#scale_fill_manual(values=c("#999999",rev(c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7","springgreen4","mediumorchid4","cadetblue","lightpink","khaki","turquoise1","black","steelblue")))) +
theme(axis.text.x=element_text(angle = 55,hjust=1))
ggplot(data=Fungi_ratio, aes(x=layer_tree, y=tpm_median, fill=MEROPS_ID)) +
geom_col() + facet_wrap(.~ layer, scales = "free_x") +
#labs(title=nom2) +
#scale_fill_manual(values=mycolorsCAZy) +
scale_fill_manual(values=c(brewer.pal(8, "Paired"), brewer.pal(6, "BrBG"), "grey")) +
#scale_fill_manual(values=c("#999999",rev(c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7","springgreen4","mediumorchid4","cadetblue","lightpink","khaki","turquoise1","black","steelblue")))) +
theme(axis.text.x=element_text(angle = 55,hjust=1))
Fungi_ratio <- Fungi_TPM_MEROPS %>%
mutate(MEROPS_ID = case_when(MEROPS_ID %in% topTax ~ MEROPS_ID, TRUE ~ OtherTag)) %>%
group_by(MEROPS_ID) %>% summarise_if(is.numeric, sum) %>% pivot_longer(cols=-c(MEROPS_ID), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata) %>%
group_by(MEROPS_ID, layer_tree,layer,tree_species) %>% summarise(tpm_median=median(tpm_counts), .groups = "keep")  %>%
filter(!grepl("Others",MEROPS_ID))
#mycolorsCAZy <- GetMyColorCAZymes(Fungi_ratio$CAZy_family)
Fungi_ratio$MEROPS_ID <- factor(Fungi_ratio$MEROPS_ID, levels = c(topTax,OtherTag) )
ggplot(data=Fungi_ratio, aes(x=layer_tree, y=tpm_median, fill=MEROPS_ID)) +
geom_col() + facet_wrap(.~ layer, scales = "free_x") +
#labs(title=nom2) +
#scale_fill_manual(values=mycolorsCAZy) +
scale_fill_manual(values=c(brewer.pal(8, "Paired"), brewer.pal(6, "BrBG"), "grey")) +
#scale_fill_manual(values=c("#999999",rev(c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7","springgreen4","mediumorchid4","cadetblue","lightpink","khaki","turquoise1","black","steelblue")))) +
theme(axis.text.x=element_text(angle = 55,hjust=1))
Fungi_ratio <- Fungi_TPM_MEROPS %>%
mutate(MEROPS_ID = case_when(MEROPS_ID %in% topTax ~ MEROPS_ID, TRUE ~ OtherTag)) %>%
group_by(MEROPS_ID) %>% summarise_if(is.numeric, sum) %>% pivot_longer(cols=-c(MEROPS_ID), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata) %>%
group_by(MEROPS_ID, layer_tree,layer,tree_species) %>% summarise(tpm=sum(tpm_counts), .groups = "keep")  %>%
filter(!grepl("Others",MEROPS_ID))
#mycolorsCAZy <- GetMyColorCAZymes(Fungi_ratio$CAZy_family)
Fungi_ratio$MEROPS_ID <- factor(Fungi_ratio$MEROPS_ID, levels = c(topTax,OtherTag) )
ggplot(data=Fungi_ratio, aes(x=layer_tree, y=tpm, fill=MEROPS_ID)) +
geom_col() + facet_wrap(.~ layer, scales = "free_x") +
#labs(title=nom2) +
#scale_fill_manual(values=mycolorsCAZy) +
scale_fill_manual(values=c(brewer.pal(8, "Paired"), brewer.pal(6, "BrBG"), "grey")) +
#scale_fill_manual(values=c("#999999",rev(c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7","springgreen4","mediumorchid4","cadetblue","lightpink","khaki","turquoise1","black","steelblue")))) +
theme(axis.text.x=element_text(angle = 55,hjust=1))
Fungi_TPM_MEROPS <- Fungi_TPM %>%
dplyr::select(-starts_with("NR_"),-starts_with("Myc"),-ID,-ctg_length, -sum_contig_count ) %>%
filter(MEROPS_Hit != "*")
Fungi_TPM_MEROPS$MEROPS_ID <- sapply(strsplit(Fungi_TPM_MEROPS$MEROPS_description, "#"), "[",2)
Fungi_ratio <- Fungi_TPM_MEROPS %>%
#filter(grepl('ectomycorrhizal',LifeStyle) ) %>%
filter(grepl('saprotroph',LifeStyle) ) %>%
#mutate(CAZy_family = case_when(CAZy_family %in% topCAZymes ~ CAZy_family, TRUE ~ "Others")) %>%
#mutate(CAZy_family = case_when(CAZy_family %in% top10CAZymes$CAZy_family ~ CAZy_family, TRUE ~ "Others")) %>%
group_by(MEROPS_ID) %>% summarise_if(is.numeric, sum) %>%
pivot_longer(cols=-c(MEROPS_ID), names_to="samples", values_to="tpm") %>%
left_join(treatment_metadata) %>% group_by(MEROPS_ID, layer_tree) %>% summarise(tpm_median=median(tpm), .groups = "keep") %>%
pivot_wider(names_from  = layer_tree, values_from = "tpm_median")
sp_tmp <- Fungi_ratio %>% pivot_longer(cols=-c(MEROPS_ID), names_to="layer_tree", values_to="tpm_counts") %>%
group_by(layer_tree) %>% mutate(sumLayerTree=sum(tpm_counts)) %>% ungroup() %>%
mutate(observation_perc=(tpm_counts/sumLayerTree)*100  ) %>%
#arrange(desc(observation_perc)) %>%
group_by(layer_tree) %>%
dplyr::arrange(layer_tree, observation_perc) %>%
dplyr::mutate(cumul_observation_perc=cumsum(observation_perc)) %>%
dplyr::arrange(layer_tree, desc(observation_perc)) %>%
dplyr::mutate(cumul_observation_perc_desc=cumsum(observation_perc)) %>%
filter(cumul_observation_perc >= 50)
sp_preval <- Fungi_ratio %>% pivot_longer(cols=-c(MEROPS_ID), names_to="layer_tree", values_to="tpm_counts") %>%
mutate(nb=0)%>%
mutate(nb=case_when(tpm_counts < 1 ~  nb, TRUE ~ 1)) %>%
group_by(MEROPS_ID) %>% summarise(preval=sum(nb)) %>%
filter(preval < 4)
Fungi_ratio <- Fungi_ratio %>% filter(MEROPS_ID %in% sp_tmp$MEROPS_ID ) %>%
filter(MEROPS_ID %notin% sp_preval$MEROPS_ID )
rownames(Fungi_ratio) <- Fungi_ratio$MEROPS_ID
m <- Fungi_ratio %>% ungroup() %>% select(-MEROPS_ID)
rownames(m) <- Fungi_ratio$MEROPS_ID
quantile_breaks <- function(xs, n = 10) {
breaks <- quantile(xs, probs = seq(0, 1, length.out = n))
breaks[!duplicated(breaks)]
}
mat_breaks <- quantile_breaks(as.matrix(log(m+1)), n = 11)
library(pheatmap)
annotSample <- treatment_metadata %>% select(layer_tree, layer, tree_species) %>% unique()
tmp <- annotSample
annotSample$layer_tree <- NULL
rownames(annotSample) <- tmp$layer_tree
myColorAnnot=list("tree_species"=GetMyColor(annotSample$tree_species),
"layer"=GetMyColor(annotSample$layer)#,
#"Type"=GetMyColorCAZymes(annotCAZymes$Type),
#"Substrate"=GetMyColorCAZymes(annotCAZymes$Substrate)
)
pheatmap(log(m+1),
#color=myColor,#cutree_rows = 6,
color= c("white",(colorRampPalette(brewer.pal(9, "OrRd"))(100)),"black"),
#color=c("white",brewer.pal(length(mat_breaks)-3, "OrRd"), "black"),
#breaks = mat_breaks,
annotation_col = annotSample,
#border_color      = "grey80",
#border_size=.01,
#annotation_row = annotCAZymes,
annotation_colors = myColorAnnot,
cellwidth=16,
cellheight = 4,
fontsize_row = 4,
fontsize_col = 8,
main="MEROPS in Saprotrophs sp."
)
Fungi_ratio <- Fungi_TPM_MEROPS %>%
group_by(MEROPS_ID) %>% summarise_if(is.numeric, sum) %>% pivot_longer(cols=-c(MEROPS_ID), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata) %>%
group_by(MEROPS_ID, layer_tree) %>% summarise(tpm_median=median(tpm_counts), .groups = "keep") #%>%
topNb <- 10
t <- Fungi_ratio %>%
group_by(MEROPS_ID) %>% summarise(max=max(tpm_median), mean=mean(tpm_median), median=median(tpm_median)) #%>%
t1 <- t %>% slice_max(.,order_by = max,n=topNb)
t2 <-t  %>% slice_max(.,order_by = median,n=topNb)
t3 <- t %>% slice_max(.,order_by = mean,n=topNb)
#if(t2 > topNb){t2 <- NULL}
topTax <- unique(c(t1$MEROPS_ID,t2$MEROPS_ID,t3$MEROPS_ID))
nbOtherSpecies <- length(t$MEROPS_ID) - length(topTax)
OtherTag <- paste("Others (n=", nbOtherSpecies,')',sep="")
Fungi_ratio <- Fungi_TPM_MEROPS %>%
mutate(MEROPS_ID = case_when(MEROPS_ID %in% topTax ~ MEROPS_ID, TRUE ~ OtherTag)) %>%
group_by(MEROPS_ID) %>% summarise_if(is.numeric, sum) %>% pivot_longer(cols=-c(MEROPS_ID), names_to="samples", values_to="tpm_counts") %>%
left_join(treatment_metadata) %>%
group_by(MEROPS_ID, layer_tree,layer,tree_species) %>% summarise(tpm=sum(tpm_counts), .groups = "keep")  %>%
filter(!grepl("Others",MEROPS_ID))
#mycolorsCAZy <- GetMyColorCAZymes(Fungi_ratio$CAZy_family)
Fungi_ratio$MEROPS_ID <- factor(Fungi_ratio$MEROPS_ID, levels = c(topTax,OtherTag) )
ggplot(data=Fungi_ratio, aes(x=layer_tree, y=tpm, fill=MEROPS_ID)) +
geom_col() + facet_wrap(.~ layer, scales = "free_x") +
#labs(title=nom2) +
#scale_fill_manual(values=mycolorsCAZy) +
scale_fill_manual(values=c(brewer.pal(8, "Paired"), brewer.pal(6, "BrBG"), "grey")) +
#scale_fill_manual(values=c("#999999",rev(c("#E69F00","#56B4E9","#009E73","#F0E442","#0072B2","#D55E00","#CC79A7","springgreen4","mediumorchid4","cadetblue","lightpink","khaki","turquoise1","black","steelblue")))) +
theme(axis.text.x=element_text(angle = 55,hjust=1))
Fungi_ratio <- Fungi_TPM_MEROPS %>%
mutate(LifeStyle=case_when(!grepl('saprotroph',LifeStyle) ~LifeStyle, TRUE ~ "SAP"  )) %>%
mutate(LifeStyle=case_when(LifeStyle !="ectomycorrhizal" ~LifeStyle, TRUE ~ "EM"  )) %>%
mutate(LifeStyle = case_when(LifeStyle %in% c("EM","SAP" ) ~ LifeStyle, TRUE ~ "Others")) %>%
group_by(CAZy_family, LifeStyle) %>% summarise_if(is.numeric, sum) %>%
pivot_longer(cols=-c(CAZy_family,LifeStyle), names_to="samples", values_to="tpm") %>%
ungroup() %>%
#group_by(Type) %>%
mutate(MEROPS_sum=sum(tpm)) %>%
ungroup() %>%
left_join(treatment_metadata) %>% group_by(layer_tree, Layer,tree_species,LifeStyle,MEROPS_ID ) %>%
summarise(TPM=sum(tpm)) %>% mutate(TPM_perc=(TPM/MEROPS_sum)*100)
Fungi_ratio <- Fungi_TPM_MEROPS %>%
mutate(LifeStyle=case_when(!grepl('saprotroph',LifeStyle) ~LifeStyle, TRUE ~ "SAP"  )) %>%
mutate(LifeStyle=case_when(LifeStyle !="ectomycorrhizal" ~LifeStyle, TRUE ~ "EM"  )) %>%
mutate(LifeStyle = case_when(LifeStyle %in% c("EM","SAP" ) ~ LifeStyle, TRUE ~ "Others")) %>%
group_by(MEROPS_ID, LifeStyle) %>% summarise_if(is.numeric, sum) %>%
pivot_longer(cols=-c(MEROPS_ID,LifeStyle), names_to="samples", values_to="tpm") %>%
ungroup() %>%
#group_by(Type) %>%
mutate(MEROPS_sum=sum(tpm)) %>%
ungroup() %>%
left_join(treatment_metadata) %>% group_by(layer_tree, Layer,tree_species,LifeStyle,MEROPS_ID ) %>%
summarise(TPM=sum(tpm)) %>% mutate(TPM_perc=(TPM/MEROPS_sum)*100)
Fungi_ratio <- Fungi_TPM_MEROPS %>%
mutate(LifeStyle=case_when(!grepl('saprotroph',LifeStyle) ~LifeStyle, TRUE ~ "SAP"  )) %>%
mutate(LifeStyle=case_when(LifeStyle !="ectomycorrhizal" ~LifeStyle, TRUE ~ "EM"  )) %>%
mutate(LifeStyle = case_when(LifeStyle %in% c("EM","SAP" ) ~ LifeStyle, TRUE ~ "Others")) %>%
group_by(MEROPS_ID, LifeStyle) %>% summarise_if(is.numeric, sum) %>%
pivot_longer(cols=-c(MEROPS_ID,LifeStyle), names_to="samples", values_to="tpm") %>%
ungroup() %>%
#group_by(Type) %>%
mutate(MEROPS_sum=sum(tpm)) %>%
ungroup() %>%
left_join(treatment_metadata) %>% group_by(layer_tree, Layer,tree_species,LifeStyle,MEROPS_sum ) %>%
summarise(TPM=sum(tpm)) %>% mutate(TPM_perc=(TPM/MEROPS_sum)*100)
toPlot <- Fungi_ratio %>% ungroup() %>% select(layer_tree, LifeStyle, TPM_perc) %>% pivot_wider(names_from  = LifeStyle, values_from = "TPM_perc")
colnames(toPlot)
toPlot <- toPlot %>% select(layer_tree,SAP,EM,Others)
m <- toPlot %>% select(-layer_tree)
rownames(m) <- toPlot$layer_tree
breaksList = seq(0,3, by = 0.05)
library(pheatmap)
pheatmap(m,
#color=myColor,#cutree_rows = 6,
color= c("white",(colorRampPalette(rev(brewer.pal(9, "RdYlBu")))(length(breaksList)))),
#color=c("white",brewer.pal(length(mat_breaks)-3, "OrRd"), "black"),
#breaks = mat_breaks,
#annotation_col = annotSample,
#border_color      = "grey80",
#border_size=.01,
#annotation_row = annotCAZymes,
breaks = breaksList,
cluster_cols = F,
cluster_rows = F,
annotation_colors = myColorAnnot,
display_numbers = TRUE,
number_color = "black",
angle_col=45,
#cellwidth=16,
#cellheight = 4,
fontsize_row = 8,
fontsize_col = 10#,
#main="Repartition of FCW CAZymes in the samples (%)"
#main="PCW"
)
breaksList = seq(0,12, by = 0.05)
library(pheatmap)
pheatmap(m,
#color=myColor,#cutree_rows = 6,
color= c("white",(colorRampPalette(rev(brewer.pal(9, "RdYlBu")))(length(breaksList)))),
#color=c("white",brewer.pal(length(mat_breaks)-3, "OrRd"), "black"),
#breaks = mat_breaks,
#annotation_col = annotSample,
#border_color      = "grey80",
#border_size=.01,
#annotation_row = annotCAZymes,
breaks = breaksList,
cluster_cols = F,
cluster_rows = F,
annotation_colors = myColorAnnot,
display_numbers = TRUE,
number_color = "black",
angle_col=45,
#cellwidth=16,
#cellheight = 4,
fontsize_row = 8,
fontsize_col = 10#,
#main="Repartition of FCW CAZymes in the samples (%)"
#main="PCW"
)
breaksList = seq(0,10, by = 0.05)
library(pheatmap)
pheatmap(m,
#color=myColor,#cutree_rows = 6,
color= c("white",(colorRampPalette(rev(brewer.pal(9, "RdYlBu")))(length(breaksList)))),
#color=c("white",brewer.pal(length(mat_breaks)-3, "OrRd"), "black"),
#breaks = mat_breaks,
#annotation_col = annotSample,
#border_color      = "grey80",
#border_size=.01,
#annotation_row = annotCAZymes,
breaks = breaksList,
cluster_cols = F,
cluster_rows = F,
annotation_colors = myColorAnnot,
display_numbers = TRUE,
number_color = "black",
angle_col=45,
#cellwidth=16,
#cellheight = 4,
fontsize_row = 8,
fontsize_col = 10#,
#main="Repartition of FCW CAZymes in the samples (%)"
#main="PCW"
)
pheatmap(m,
#color=myColor,#cutree_rows = 6,
color= c("white",(colorRampPalette(rev(brewer.pal(9, "RdYlBu")))(length(breaksList)))),
#color=c("white",brewer.pal(length(mat_breaks)-3, "OrRd"), "black"),
#breaks = mat_breaks,
#annotation_col = annotSample,
#border_color      = "grey80",
#border_size=.01,
#annotation_row = annotCAZymes,
breaks = breaksList,
cluster_cols = F,
cluster_rows = F,
annotation_colors = myColorAnnot,
display_numbers = TRUE,
number_color = "black",
angle_col=45,
#cellwidth=16,
#cellheight = 4,
fontsize_row = 8,
fontsize_col = 10,
main="Repartition of proteases among samples (%)"
#main="PCW"
)
pheatmap(m,
#color=myColor,#cutree_rows = 6,
color= c("white",(colorRampPalette(rev(brewer.pal(9, "RdYlBu")))(length(breaksList)))),
#color=c("white",brewer.pal(length(mat_breaks)-3, "OrRd"), "black"),
#breaks = mat_breaks,
#annotation_col = annotSample,
#border_color      = "grey80",
#border_size=.01,
#annotation_row = annotCAZymes,
breaks = breaksList,
cluster_cols = F,
cluster_rows = F,
annotation_colors = myColorAnnot,
display_numbers = TRUE,
number_color = "black",
angle_col=45,
#cellwidth=16,
#cellheight = 4,
fontsize_row = 8,
fontsize_col = 10,
main="Repartition of proteases
among samples (%)"
#main="PCW"
)
